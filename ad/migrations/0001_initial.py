# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-12-29 00:23
from __future__ import unicode_literals

import ad.models
import datetime
import dirtyfields.dirtyfields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DealType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('slug', models.SlugField(max_length=20, verbose_name='\u0447\u0430\u0441\u0442\u044c URL-\u0430')),
            ],
            options={
                'verbose_name': '\u0442\u0438\u043f \u0441\u0434\u0435\u043b\u043a\u0438',
                'verbose_name_plural': '\u0442\u0438\u043f\u044b \u0441\u0434\u0435\u043b\u043a\u0438',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430')),
                ('name_ru', models.CharField(max_length=30, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430')),
                ('name_uk', models.CharField(max_length=30, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430')),
                ('name_hu', models.CharField(max_length=30, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': '\u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e',
                'verbose_name_plural': '\u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430',
            },
        ),
        migrations.CreateModel(
            name='MetroStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': '\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u043c\u0435\u0442\u0440\u043e',
                'verbose_name_plural': '\u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e',
            },
        ),
        migrations.CreateModel(
            name='Moderation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='\u0434\u0430\u0442\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043d\u0430 \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u044e')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='\u0434\u0430\u0442\u0430 \u0441\u043d\u044f\u0442\u0438\u044f \u0441 \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u0438')),
                ('new_status', models.PositiveIntegerField(blank=True, choices=[(10, '\u043d\u0435\u0442 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430'), (11, '\u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441'), (12, '\u043d\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0446\u0435\u043d\u0430'), (13, '\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438'), (14, '\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f\u0445'), (15, '\u0444\u043e\u0442\u043e \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438'), (16, '\u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c'), (17, '\u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430'), (19, '\u0440\u0435\u043a\u043b\u0430\u043c\u0430'), (20, '\u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043e'), (22, '\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f'), (23, '\u043d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0416\u041a'), (24, '\u043e\u0431\u044a\u0435\u043a\u0442 \u0432\u0442\u043e\u0440\u0438\u0447\u043d\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430'), (21, '\u0440\u043e\u0431\u043e\u0442'), (200, '\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u043e (\u0431\u0430\u043d)'), (220, '\u0444\u0438\u0434\u044b \u0431\u0435\u0437 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a')], null=True, verbose_name='\u043d\u043e\u0432\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441')),
            ],
            options={
                'ordering': ['-start_time'],
                'verbose_name': '\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u0438',
                'verbose_name_plural': '\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u0438',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('number', models.CharField(max_length=12, primary_key=True, serialize=False, verbose_name='\u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430')),
                ('is_agency', models.BooleanField(default=False, verbose_name='\u043d\u043e\u043c\u0435\u0440 \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0430')),
                ('is_banned', models.BooleanField(default=False, verbose_name='\u0437\u0430\u0431\u0430\u043d\u0435\u043d')),
                ('ignore_in_parser', models.BooleanField(default=False, help_text='\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0441 \u044d\u0442\u0438\u043c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u043c \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f', verbose_name='\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u043f\u0430\u0440\u0441\u0435\u0440\u0435')),
            ],
            options={
                'verbose_name': '\u0442\u0435\u043b\u0435\u0444\u043e\u043d',
                'verbose_name_plural': '\u0442\u0435\u043b\u0435\u0444\u043e\u043d\u044b',
            },
        ),
        migrations.CreateModel(
            name='PhoneInAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='\u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': '\u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438',
                'verbose_name_plural': '\u0442\u0435\u043b\u0435\u0444\u043e\u043d\u044b \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='\u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440')),
                ('source_url', models.CharField(blank=True, max_length=512, verbose_name='\u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a')),
                ('image', ad.models.ExtendedImageField(blank=True, height_field=b'height', null=True, upload_to=ad.models.make_upload_path, verbose_name='\u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f', width_field=b'width')),
                ('caption', models.CharField(max_length=255, null=True, verbose_name='\u043f\u043e\u0434\u043f\u0438\u0441\u044c \u043a \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438')),
                ('width', models.PositiveIntegerField(default=0, verbose_name='\u0448\u0438\u0440\u0438\u043d\u0430 \u0444\u043e\u0442\u043e')),
                ('height', models.PositiveIntegerField(default=0, verbose_name='\u0432\u044b\u0441\u043e\u0442\u0430 \u0444\u043e\u0442\u043e')),
                ('hash', models.CharField(db_index=True, max_length=16, null=True, verbose_name='\u0445\u044d\u0448 \u0444\u043e\u0442\u043e')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': '\u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f',
                'verbose_name_plural': '\u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[(b'country', '\u0441\u0442\u0440\u0430\u043d\u0430'), (b'province', '\u043e\u0431\u043b\u0430\u0441\u0442\u044c'), (b'area', '\u043e\u0431\u043b\u0430\u0441\u0442\u043d\u043e\u0439 \u0440\u0430\u0439\u043e\u043d'), (b'locality', '\u0433\u043e\u0440\u043e\u0434'), (b'village', '\u0441\u0435\u043b\u043e/\u043f\u043e\u0441\u0435\u043b\u043e\u043a'), (b'district', '\u0440\u0430\u0439\u043e\u043d \u0433\u043e\u0440\u043e\u0434\u0430'), (b'vegetation', '\u043f\u0430\u0440\u043a'), (b'hydro', '\u043e\u0437\u0435\u0440\u043e'), (b'street', '\u0443\u043b\u0438\u0446\u0430'), (b'group', '\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 m2m'), (b'group2', '\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e parent')], max_length=10, verbose_name='\u0442\u0438\u043f \u0440\u0435\u0433\u0438\u043e\u043d\u0430')),
                ('name', models.CharField(max_length=255, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('name_uk', models.CharField(max_length=255, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('name_hu', models.CharField(max_length=255, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('name_declension', models.CharField(blank=True, max_length=700, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('name_declension_ru', models.CharField(blank=True, max_length=700, null=True, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('name_declension_uk', models.CharField(blank=True, max_length=700, null=True, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('name_declension_hu', models.CharField(blank=True, max_length=700, null=True, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('old_name', models.CharField(blank=True, max_length=255, verbose_name='\u0441\u0442\u0430\u0440\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('old_name_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='\u0441\u0442\u0430\u0440\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('old_name_uk', models.CharField(blank=True, max_length=255, null=True, verbose_name='\u0441\u0442\u0430\u0440\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('old_name_hu', models.CharField(blank=True, max_length=255, null=True, verbose_name='\u0441\u0442\u0430\u0440\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('old_name_declension', models.CharField(blank=True, max_length=700, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('old_name_declension_ru', models.CharField(blank=True, max_length=700, null=True, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('old_name_declension_uk', models.CharField(blank=True, max_length=700, null=True, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('old_name_declension_hu', models.CharField(blank=True, max_length=700, null=True, verbose_name='\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f')),
                ('text', models.CharField(max_length=255, verbose_name='\u043f\u043e\u043b\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('slug', models.SlugField(verbose_name='\u0447\u0430\u0441\u0442\u044c URL-\u0430')),
                ('static_url', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='\u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0430')),
                ('subdomain', models.BooleanField(db_index=True, default=False, verbose_name='\u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043d\u0430 \u043f\u043e\u0434\u0434\u043e\u043c\u0435\u043d\u0435')),
                ('main_city', models.BooleanField(db_index=True, default=False, verbose_name='\u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0446\u0435\u043d\u0442\u0440 \u043e\u0431\u043b\u0430\u0441\u0442\u0438')),
                ('active_properties', models.PositiveIntegerField(default=0, verbose_name='\u043a\u043e\u043b-\u0432\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0435')),
                ('created', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f')),
                ('description_main', models.TextField(blank=True, verbose_name='description \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439')),
                ('description_rent', models.TextField(blank=True, verbose_name='description \u0430\u0440\u0435\u043d\u0434\u044b')),
                ('description_rent_daily', models.TextField(blank=True, verbose_name='description \u0430\u0440\u0435\u043d\u0434\u044b \u043f\u043e\u0441\u0443\u0442\u043e\u0447\u043d\u043e')),
                ('description_sale', models.TextField(blank=True, verbose_name='description \u043f\u0440\u043e\u0434\u0430\u0436\u0438')),
                ('analytics', models.CharField(blank=True, max_length=20, verbose_name='ID \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430 Google Analytics')),
                ('coords_x', models.FloatField(blank=True, null=True, verbose_name='\u0434\u043e\u043b\u0433\u043e\u0442\u0430 LONG')),
                ('coords_y', models.FloatField(blank=True, null=True, verbose_name='\u0448\u0438\u0440\u043e\u0442\u0430 LAT')),
                ('bounded_by_coords', models.CharField(blank=True, max_length=60, null=True, verbose_name='\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0433\u0440\u0430\u043d\u0438\u0446 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0433\u0435\u043e\u043e\u0431\u044a\u0435\u043a\u0442\u0430')),
                ('tree_path', ad.models.CollateCCharField(db_index=True, max_length=100, null=True, verbose_name='\u043f\u0443\u0442\u044c \u0432 \u0434\u0435\u0440\u0435\u0432\u0435')),
                ('price_level', models.CharField(blank=True, choices=[(b'low', '\u043d\u0438\u0437\u043a\u0438\u0439'), (b'medium', '\u0441\u0440\u0435\u0434\u043d\u0438\u0439'), (b'high', '\u0432\u044b\u0441\u043e\u043a\u0438\u0439')], max_length=10, null=True, verbose_name='\u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0446\u0435\u043d \u043d\u0430 \u043f\u043b\u0430\u0442\u043d\u044b\u0435 \u0443\u0441\u043b\u0443\u0433\u0438')),
                ('groupped', models.ManyToManyField(blank=True, related_name='_region_groupped_+', to='ad.Region', verbose_name='\u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0433\u0440\u0443\u043f\u043f\u044b')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ad.Region', verbose_name='\u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a')),
            ],
            options={
                'verbose_name': '\u0433\u043e\u0440\u043e\u0434',
                'verbose_name_plural': '\u0433\u043e\u0440\u043e\u0434\u0430',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RegionCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deal_type', models.CharField(choices=[(b'rent', '\u0430\u0440\u0435\u043d\u0434\u0430'), (b'rent_daily', '\u043f\u043e\u0441\u0443\u0442\u043e\u0447\u043d\u0430\u044f \u0430\u0440\u0435\u043d\u0434\u0430'), (b'sale', '\u043f\u0440\u043e\u0434\u0430\u0436\u0430')], max_length=20, verbose_name='\u0442\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438')),
                ('count', models.PositiveIntegerField(verbose_name='\u043a\u043e\u043b-\u0432\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='\u0432\u0440\u0435\u043c\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_counter', to='ad.Region', verbose_name='\u0433\u043e\u0440\u043e\u0434')),
            ],
            options={
                'verbose_name': '\u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0432 \u0433\u043e\u0440\u043e\u0434\u0435',
                'verbose_name_plural': '\u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439',
            },
        ),
        migrations.CreateModel(
            name='ReservedDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name': '\u0437\u0430\u043d\u044f\u0442\u044b\u0439 \u0434\u0435\u043d\u044c',
                'verbose_name_plural': '\u0437\u0430\u043d\u044f\u0442\u044b\u0435 \u0434\u043d\u0438',
            },
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f')),
                ('name_ru', models.CharField(max_length=30, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f')),
                ('name_uk', models.CharField(max_length=30, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f')),
                ('name_hu', models.CharField(max_length=30, null=True, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': '\u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f',
                'verbose_name_plural': '\u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f',
            },
        ),
        migrations.CreateModel(
            name='SearchCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='\u0434\u0430\u0442\u0430')),
                ('deal_type', models.CharField(choices=[(b'rent', '\u0430\u0440\u0435\u043d\u0434\u0430'), (b'rent_daily', '\u043f\u043e\u0441\u0443\u0442\u043e\u0447\u043d\u0430\u044f \u0430\u0440\u0435\u043d\u0434\u0430'), (b'sale', '\u043f\u0440\u043e\u0434\u0430\u0436\u0430')], max_length=20, verbose_name='\u0442\u0438\u043f \u0441\u0434\u0435\u043b\u043a\u0438')),
                ('property_type', models.CharField(choices=[(b'flat', '\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430'), (b'room', '\u043a\u043e\u043c\u043d\u0430\u0442\u0430'), (b'house', '\u0434\u043e\u043c'), (b'plot', '\u0443\u0447\u0430\u0441\u0442\u043e\u043a'), (b'commercial', '\u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u0430\u044f \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u044c'), (b'garages', '\u0433\u0430\u0440\u0430\u0436\u0438')], max_length=20, null=True, verbose_name='\u0442\u0438\u043f \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438')),
                ('rooms', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(choices=[(1, b'1'), (2, b'2'), (3, b'3'), (4, b'4'), (5, b'5+')], verbose_name='\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442'), size=None)),
                ('without_commission', models.BooleanField(verbose_name='\u0431\u0435\u0437 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438')),
                ('area_from', models.IntegerField(null=True, verbose_name='\u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043e\u0442')),
                ('area_to', models.IntegerField(null=True, verbose_name='\u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0434\u043e')),
                ('price_from', models.IntegerField(null=True, verbose_name='\u0446\u0435\u043d\u0430 \u043e\u0442')),
                ('price_to', models.IntegerField(null=True, verbose_name='\u0446\u0435\u043d\u0430 \u0434\u043e')),
                ('currency', models.CharField(choices=[(b'UAH', '\u0433\u0440\u043d.'), (b'EUR', '\u20ac'), (b'USD', '$'), (b'RUR', '\u0440\u0443\u0431.')], max_length=3, verbose_name='\u0432\u0430\u043b\u044e\u0442\u0430 \u0446\u0435\u043d\u044b')),
                ('facilities', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(verbose_name='\u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430'), size=None)),
                ('other_parameters', models.TextField(null=True, verbose_name='\u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b')),
                ('searches_first_page', models.PositiveIntegerField(default=0, verbose_name='\u043f\u043e\u0438\u0441\u043a\u0438 - \u043f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430')),
                ('searches_all_pages', models.PositiveIntegerField(default=0, verbose_name='\u043f\u043e\u0438\u0441\u043a\u0438 - \u0432\u0441\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ad.Region', verbose_name='\u0440\u0435\u0433\u0438\u043e\u043d')),
            ],
            options={
                'verbose_name': '\u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043f\u043e\u0438\u0441\u043a\u0430',
                'verbose_name_plural': '\u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0438 \u043f\u043e\u0438\u0441\u043a\u043e\u0432',
            },
        ),
        migrations.CreateModel(
            name='SubwayLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=b'', max_length=100, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0442\u043a\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('name_ru', models.CharField(blank=True, default=b'', max_length=100, null=True, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0442\u043a\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('name_uk', models.CharField(blank=True, default=b'', max_length=100, null=True, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0442\u043a\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('name_hu', models.CharField(blank=True, default=b'', max_length=100, null=True, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0442\u043a\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='\u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440')),
                ('color', models.CharField(default=b'#000000', max_length=7, verbose_name='HEX-\u0446\u0432\u0435\u0442 \u0432\u0435\u0442\u043a\u0438')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ad.Region', verbose_name='\u0413\u043e\u0440\u043e\u0434')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': '\u0412\u0435\u0442\u043a\u0443',
                'verbose_name_plural': '\u041c\u0435\u0442\u0440\u043e',
            },
        ),
        migrations.CreateModel(
            name='SubwayStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='\u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440')),
                ('name', models.CharField(blank=True, default=b'', max_length=100, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('name_ru', models.CharField(blank=True, default=b'', max_length=100, null=True, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('name_uk', models.CharField(blank=True, default=b'', max_length=100, null=True, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('name_hu', models.CharField(blank=True, default=b'', max_length=100, null=True, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e')),
                ('coords_x', models.FloatField(blank=True, null=True, verbose_name='\u0434\u043e\u043b\u0433\u043e\u0442\u0430/longitude')),
                ('coords_y', models.FloatField(blank=True, null=True, verbose_name='\u0448\u0438\u0440\u043e\u0442\u0430/latitude')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, verbose_name='\u0447\u0430\u0441\u0442\u044c URL-\u0430')),
                ('subway_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='ad.SubwayLine', verbose_name='\u0412\u0435\u0442\u043a\u0430 \u043c\u0435\u0442\u0440\u043e')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': '\u0441\u0442\u0430\u043d\u0446\u0438\u044e',
                'verbose_name_plural': '\u0421\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e',
            },
        ),
        migrations.CreateModel(
            name='ViewsCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='\u0434\u0430\u0442\u0430')),
                ('is_archived', models.BooleanField(default=False, verbose_name='\u0441\u043a\u0440\u044b\u0442 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f?')),
                ('detail_views', models.PositiveIntegerField(default=0, verbose_name='\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f')),
                ('contacts_views', models.PositiveIntegerField(default=0, verbose_name='\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u044b \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043e\u0432')),
            ],
            options={
                'verbose_name': '\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f',
                'verbose_name_plural': '\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439',
            },
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('basead_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ad.BaseAd')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='\u043f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441')),
                ('addr_country', models.CharField(choices=[(b'AU', b'\xd0\x90\xd0\xb2\xd1\x81\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x8f'), (b'AT', b'\xd0\x90\xd0\xb2\xd1\x81\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f'), (b'AZ', b'\xd0\x90\xd0\xb7\xd0\xb5\xd1\x80\xd0\xb1\xd0\xb0\xd0\xb9\xd0\xb4\xd0\xb6\xd0\xb0\xd0\xbd'), (b'AL', b'\xd0\x90\xd0\xbb\xd0\xb1\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'DZ', b'\xd0\x90\xd0\xbb\xd0\xb6\xd0\xb8\xd1\x80'), (b'AI', b'\xd0\x90\xd0\xbd\xd0\xb3\xd0\xb8\xd0\xbb\xd1\x8c\xd1\x8f \xd0\xbe. (GB)'), (b'AO', b'\xd0\x90\xd0\xbd\xd0\xb3\xd0\xbe\xd0\xbb\xd0\xb0'), (b'AD', b'\xd0\x90\xd0\xbd\xd0\xb4\xd0\xbe\xd1\x80\xd1\x80\xd0\xb0'), (b'AQ', b'\xd0\x90\xd0\xbd\xd1\x82\xd0\xb0\xd1\x80\xd0\xba\xd1\x82\xd0\xb8\xd0\xba\xd0\xb0'), (b'AG', b'\xd0\x90\xd0\xbd\xd1\x82\xd0\xb8\xd0\xb3\xd1\x83\xd0\xb0 \xd0\xb8 \xd0\x91\xd0\xb0\xd1\x80\xd0\xb1\xd1\x83\xd0\xb4\xd0\xb0'), (b'AN', b'\xd0\x90\xd0\xbd\xd1\x82\xd0\xb8\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xbe-\xd0\xb2\xd0\xb0 (NL)'), (b'AR', b'\xd0\x90\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb8\xd0\xbd\xd0\xb0'), (b'AM', b'\xd0\x90\xd1\x80\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f'), (b'AW', b'\xd0\x90\xd1\x80\xd1\x83\xd0\xb1\xd0\xb0'), (b'AF', b'\xd0\x90\xd1\x84\xd0\xb3\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'BS', b'\xd0\x91\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xbc\xd1\x8b'), (b'BD', b'\xd0\x91\xd0\xb0\xd0\xbd\xd0\xb3\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xb5\xd1\x88'), (b'BB', b'\xd0\x91\xd0\xb0\xd1\x80\xd0\xb1\xd0\xb0\xd0\xb4\xd0\xbe\xd1\x81'), (b'BH', b'\xd0\x91\xd0\xb0\xd1\x85\xd1\x80\xd0\xb5\xd0\xb9\xd0\xbd'), (b'BY', b'\xd0\x91\xd0\xb5\xd0\xbb\xd0\xb0\xd1\x80\xd1\x83\xd1\x81\xd1\x8c'), (b'BZ', b'\xd0\x91\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xb7'), (b'BE', b'\xd0\x91\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xb3\xd0\xb8\xd1\x8f'), (b'BJ', b'\xd0\x91\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd'), (b'BM', b'\xd0\x91\xd0\xb5\xd1\x80\xd0\xbc\xd1\x83\xd0\xb4\xd1\x8b'), (b'BV', b'\xd0\x91\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xbe. (NO)'), (b'BG', b'\xd0\x91\xd0\xbe\xd0\xbb\xd0\xb3\xd0\xb0\xd1\x80\xd0\xb8\xd1\x8f'), (b'BO', b'\xd0\x91\xd0\xbe\xd0\xbb\xd0\xb8\xd0\xb2\xd0\xb8\xd1\x8f'), (b'BA', b'\xd0\x91\xd0\xbe\xd1\x81\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb8 \xd0\x93\xd0\xb5\xd1\x80\xd1\x86\xd0\xb5\xd0\xb3\xd0\xbe\xd0\xb2\xd0\xb8\xd0\xbd\xd0\xb0'), (b'BW', b'\xd0\x91\xd0\xbe\xd1\x82\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb0'), (b'BR', b'\xd0\x91\xd1\x80\xd0\xb0\xd0\xb7\xd0\xb8\xd0\xbb\xd0\xb8\xd1\x8f'), (b'BN', b'\xd0\x91\xd1\x80\xd1\x83\xd0\xbd\xd0\xb5\xd0\xb9 \xd0\x94\xd0\xb0\xd1\x80\xd0\xb0\xd1\x81\xd1\x81\xd0\xb0\xd0\xbb\xd0\xb0\xd0\xbc'), (b'BF', b'\xd0\x91\xd1\x83\xd1\x80\xd0\xba\xd0\xb8\xd0\xbd\xd0\xb0-\xd0\xa4\xd0\xb0\xd1\x81\xd0\xbe'), (b'BI', b'\xd0\x91\xd1\x83\xd1\x80\xd1\x83\xd0\xbd\xd0\xb4\xd0\xb8'), (b'BT', b'\xd0\x91\xd1\x83\xd1\x82\xd0\xb0\xd0\xbd'), (b'VU', b'\xd0\x92\xd0\xb0\xd0\xbd\xd1\x83\xd0\xb0\xd1\x82\xd1\x83'), (b'VA', b'\xd0\x92\xd0\xb0\xd1\x82\xd0\xb8\xd0\xba\xd0\xb0\xd0\xbd'), (b'GB', b'\xd0\x92\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb1\xd1\x80\xd0\xb8\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'HU', b'\xd0\x92\xd0\xb5\xd0\xbd\xd0\xb3\xd1\x80\xd0\xb8\xd1\x8f'), (b'VE', b'\xd0\x92\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x81\xd1\x83\xd1\x8d\xd0\xbb\xd0\xb0'), (b'VG', b'\xd0\x92\xd0\xb8\xd1\x80\xd0\xb3\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xbe-\xd0\xb2\xd0\xb0 (GB)'), (b'VI', b'\xd0\x92\xd0\xb8\xd1\x80\xd0\xb3\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xbe-\xd0\xb2\xd0\xb0 (US)'), (b'AS', b'\xd0\x92\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x87\xd0\xbd\xd0\xbe\xd0\xb5 \xd0\xa1\xd0\xb0\xd0\xbc\xd0\xbe\xd0\xb0 (US)'), (b'TP', b'\xd0\x92\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x87\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xa2\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x80'), (b'VN', b'\xd0\x92\xd1\x8c\xd0\xb5\xd1\x82\xd0\xbd\xd0\xb0\xd0\xbc'), (b'GA', b'\xd0\x93\xd0\xb0\xd0\xb1\xd0\xbe\xd0\xbd'), (b'HT', b'\xd0\x93\xd0\xb0\xd0\xb8\xd1\x82\xd0\xb8'), (b'GY', b'\xd0\x93\xd0\xb0\xd0\xb9\xd0\xb0\xd0\xbd\xd0\xb0'), (b'GM', b'\xd0\x93\xd0\xb0\xd0\xbc\xd0\xb1\xd0\xb8\xd1\x8f'), (b'GH', b'\xd0\x93\xd0\xb0\xd0\xbd\xd0\xb0'), (b'GP', b'\xd0\x93\xd0\xb2\xd0\xb0\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x83\xd0\xbf\xd0\xb0'), (b'GT', b'\xd0\x93\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbc\xd0\xb0\xd0\xbb\xd0\xb0'), (b'GN', b'\xd0\x93\xd0\xb2\xd0\xb8\xd0\xbd\xd0\xb5\xd1\x8f'), (b'GW', b'\xd0\x93\xd0\xb2\xd0\xb8\xd0\xbd\xd0\xb5\xd1\x8f-\xd0\x91\xd0\xb8\xd1\x81\xd0\xb0\xd1\x83'), (b'DE', b'\xd0\x93\xd0\xb5\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'GI', b'\xd0\x93\xd0\xb8\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbb\xd1\x82\xd0\xb0\xd1\x80'), (b'HN', b'\xd0\x93\xd0\xbe\xd0\xbd\xd0\xb4\xd1\x83\xd1\x80\xd0\xb0\xd1\x81'), (b'HK', b'\xd0\x93\xd0\xbe\xd0\xbd\xd0\xba\xd0\xbe\xd0\xbd\xd0\xb3 (CN)'), (b'GD', b'\xd0\x93\xd1\x80\xd0\xb5\xd0\xbd\xd0\xb0\xd0\xb4\xd0\xb0'), (b'GL', b'\xd0\x93\xd1\x80\xd0\xb5\xd0\xbd\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb8\xd1\x8f (DK)'), (b'GR', b'\xd0\x93\xd1\x80\xd0\xb5\xd1\x86\xd0\xb8\xd1\x8f'), (b'GE', b'\xd0\x93\xd1\x80\xd1\x83\xd0\xb7\xd0\xb8\xd1\x8f'), (b'GU', b'\xd0\x93\xd1\x83\xd0\xb0\xd0\xbc'), (b'DK', b'\xd0\x94\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'CD', b'\xd0\x94\xd0\xb5\xd0\xbc\xd0\xbe\xd0\xba\xd1\x80\xd0\xb0\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xa0\xd0\xb5\xd1\x81\xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd0\xb0 \xd0\x9a\xd0\xbe\xd0\xbd\xd0\xb3\xd0\xbe'), (b'DJ', b'\xd0\x94\xd0\xb6\xd0\xb8\xd0\xb1\xd1\x83\xd1\x82\xd0\xb8'), (b'DM', b'\xd0\x94\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb0'), (b'DO', b'\xd0\x94\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xa0\xd0\xb5\xd1\x81\xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd0\xb0'), (b'EG', b'\xd0\x95\xd0\xb3\xd0\xb8\xd0\xbf\xd0\xb5\xd1\x82'), (b'ZM', b'\xd0\x97\xd0\xb0\xd0\xbc\xd0\xb1\xd0\xb8\xd1\x8f'), (b'EH', b'\xd0\x97\xd0\xb0\xd0\xbf\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xa1\xd0\xb0\xd1\x85\xd0\xb0\xd1\x80\xd0\xb0'), (b'ZW', b'\xd0\x97\xd0\xb8\xd0\xbc\xd0\xb1\xd0\xb0\xd0\xb1\xd0\xb2\xd0\xb5'), (b'IL', b'\xd0\x98\xd0\xb7\xd1\x80\xd0\xb0\xd0\xb8\xd0\xbb\xd1\x8c'), (b'IN', b'\xd0\x98\xd0\xbd\xd0\xb4\xd0\xb8\xd1\x8f'), (b'ID', b'\xd0\x98\xd0\xbd\xd0\xb4\xd0\xbe\xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb8\xd1\x8f'), (b'JO', b'\xd0\x98\xd0\xbe\xd1\x80\xd0\xb4\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'IQ', b'\xd0\x98\xd1\x80\xd0\xb0\xd0\xba'), (b'IR', b'\xd0\x98\xd1\x80\xd0\xb0\xd0\xbd'), (b'IE', b'\xd0\x98\xd1\x80\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb8\xd1\x8f'), (b'IS', b'\xd0\x98\xd1\x81\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb8\xd1\x8f'), (b'ES', b'\xd0\x98\xd1\x81\xd0\xbf\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'IT', b'\xd0\x98\xd1\x82\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x8f'), (b'YE', b'\xd0\x99\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd'), (b'CV', b'\xd0\x9a\xd0\xb0\xd0\xb1\xd0\xbe-\xd0\x92\xd0\xb5\xd1\x80\xd0\xb4\xd0\xb5'), (b'KZ', b'\xd0\x9a\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x85\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'KY', b'\xd0\x9a\xd0\xb0\xd0\xb9\xd0\xbc\xd0\xb0\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd0\xbe-\xd0\xb2\xd0\xb0 (GB)'), (b'KH', b'\xd0\x9a\xd0\xb0\xd0\xbc\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xb6\xd0\xb0'), (b'CM', b'\xd0\x9a\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x80\xd1\x83\xd0\xbd'), (b'CA', b'\xd0\x9a\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xb4\xd0\xb0'), (b'QA', b'\xd0\x9a\xd0\xb0\xd1\x82\xd0\xb0\xd1\x80'), (b'KE', b'\xd0\x9a\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f'), (b'CY', b'\xd0\x9a\xd0\xb8\xd0\xbf\xd1\x80'), (b'KG', b'\xd0\x9a\xd0\xb8\xd1\x80\xd0\xb3\xd0\xb8\xd0\xb7\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'KI', b'\xd0\x9a\xd0\xb8\xd1\x80\xd0\xb8\xd0\xb1\xd0\xb0\xd1\x82\xd0\xb8'), (b'CN', b'\xd0\x9a\xd0\xb8\xd1\x82\xd0\xb0\xd0\xb9'), (b'CC', b'\xd0\x9a\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb2\xd1\x8b\xd0\xb5 (\xd0\x9a\xd0\xb8\xd0\xb8\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb3) \xd0\xbe-\xd0\xb2\xd0\xb0 (AU)'), (b'CO', b'\xd0\x9a\xd0\xbe\xd0\xbb\xd1\x83\xd0\xbc\xd0\xb1\xd0\xb8\xd1\x8f'), (b'KM', b'\xd0\x9a\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x80\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xbe-\xd0\xb2\xd0\xb0'), (b'CG', b'\xd0\x9a\xd0\xbe\xd0\xbd\xd0\xb3\xd0\xbe'), (b'CR', b'\xd0\x9a\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0-\xd0\xa0\xd0\xb8\xd0\xba\xd0\xb0'), (b'CI', b"\xd0\x9a\xd0\xbe\xd1\x82-\xd0\xb4'\xd0\x98\xd0\xb2\xd1\x83\xd0\xb0\xd1\x80"), (b'CU', b'\xd0\x9a\xd1\x83\xd0\xb1\xd0\xb0'), (b'KW', b'\xd0\x9a\xd1\x83\xd0\xb2\xd0\xb5\xd0\xb9\xd1\x82'), (b'CK', b'\xd0\x9a\xd1\x83\xd0\xba\xd0\xb0 \xd0\xbe-\xd0\xb2\xd0\xb0 (NZ)'), (b'LA', b'\xd0\x9b\xd0\xb0\xd0\xbe\xd1\x81'), (b'LV', b'\xd0\x9b\xd0\xb0\xd1\x82\xd0\xb2\xd0\xb8\xd1\x8f'), (b'LS', b'\xd0\x9b\xd0\xb5\xd1\x81\xd0\xbe\xd1\x82\xd0\xbe'), (b'LR', b'\xd0\x9b\xd0\xb8\xd0\xb1\xd0\xb5\xd1\x80\xd0\xb8\xd1\x8f'), (b'LB', b'\xd0\x9b\xd0\xb8\xd0\xb2\xd0\xb0\xd0\xbd'), (b'LY', b'\xd0\x9b\xd0\xb8\xd0\xb2\xd0\xb8\xd1\x8f'), (b'LT', b'\xd0\x9b\xd0\xb8\xd1\x82\xd0\xb2\xd0\xb0'), (b'LI', b'\xd0\x9b\xd0\xb8\xd1\x85\xd1\x82\xd0\xb5\xd0\xbd\xd1\x88\xd1\x82\xd0\xb5\xd0\xb9\xd0\xbd'), (b'LU', b'\xd0\x9b\xd1\x8e\xd0\xba\xd1\x81\xd0\xb5\xd0\xbc\xd0\xb1\xd1\x83\xd1\x80\xd0\xb3'), (b'MU', b'\xd0\x9c\xd0\xb0\xd0\xb2\xd1\x80\xd0\xb8\xd0\xba\xd0\xb8\xd0\xb9'), (b'MR', b'\xd0\x9c\xd0\xb0\xd0\xb2\xd1\x80\xd0\xb8\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'MG', b'\xd0\x9c\xd0\xb0\xd0\xb4\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x81\xd0\xba\xd0\xb0\xd1\x80'), (b'YT', b'\xd0\x9c\xd0\xb0\xd0\xb9\xd0\xbe\xd1\x82\xd1\x82\xd0\xb0 \xd0\xbe. (KM)'), (b'MO', b'\xd0\x9c\xd0\xb0\xd0\xba\xd0\xb0\xd0\xbe (PT)'), (b'MK', b'\xd0\x9c\xd0\xb0\xd0\xba\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xbd\xd0\xb8\xd1\x8f'), (b'MW', b'\xd0\x9c\xd0\xb0\xd0\xbb\xd0\xb0\xd0\xb2\xd0\xb8'), (b'MY', b'\xd0\x9c\xd0\xb0\xd0\xbb\xd0\xb0\xd0\xb9\xd0\xb7\xd0\xb8\xd1\x8f'), (b'ML', b'\xd0\x9c\xd0\xb0\xd0\xbb\xd0\xb8'), (b'MV', b'\xd0\x9c\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xb4\xd0\xb8\xd0\xb2\xd1\x8b'), (b'MT', b'\xd0\x9c\xd0\xb0\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0'), (b'MA', b'\xd0\x9c\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xba\xd0\xbe'), (b'MQ', b'\xd0\x9c\xd0\xb0\xd1\x80\xd1\x82\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb0'), (b'MH', b'\xd0\x9c\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xbb\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x8b \xd0\xbe-\xd0\xb2\xd0\xb0'), (b'MX', b'\xd0\x9c\xd0\xb5\xd0\xba\xd1\x81\xd0\xb8\xd0\xba\xd0\xb0'), (b'FM', b'\xd0\x9c\xd0\xb8\xd0\xba\xd1\x80\xd0\xbe\xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb8\xd1\x8f (US)'), (b'MZ', b'\xd0\x9c\xd0\xbe\xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb1\xd0\xb8\xd0\xba'), (b'MD', b'\xd0\x9c\xd0\xbe\xd0\xbb\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0'), (b'MC', b'\xd0\x9c\xd0\xbe\xd0\xbd\xd0\xb0\xd0\xba\xd0\xbe'), (b'MN', b'\xd0\x9c\xd0\xbe\xd0\xbd\xd0\xb3\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x8f'), (b'MS', b'\xd0\x9c\xd0\xbe\xd0\xbd\xd1\x81\xd0\xb5\xd1\x80\xd1\x80\xd0\xb0\xd1\x82 \xd0\xbe. (GB)'), (b'MM', b'\xd0\x9c\xd1\x8c\xd1\x8f\xd0\xbd\xd0\xbc\xd0\xb0'), (b'NA', b'\xd0\x9d\xd0\xb0\xd0\xbc\xd0\xb8\xd0\xb1\xd0\xb8\xd1\x8f'), (b'NR', b'\xd0\x9d\xd0\xb0\xd1\x83\xd1\x80\xd1\x83'), (b'NP', b'\xd0\x9d\xd0\xb5\xd0\xbf\xd0\xb0\xd0\xbb'), (b'NE', b'\xd0\x9d\xd0\xb8\xd0\xb3\xd0\xb5\xd1\x80'), (b'NG', b'\xd0\x9d\xd0\xb8\xd0\xb3\xd0\xb5\xd1\x80\xd0\xb8\xd1\x8f'), (b'NL', b'\xd0\x9d\xd0\xb8\xd0\xb4\xd0\xb5\xd1\x80\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x8b'), (b'NI', b'\xd0\x9d\xd0\xb8\xd0\xba\xd0\xb0\xd1\x80\xd0\xb0\xd0\xb3\xd1\x83\xd0\xb0'), (b'NU', b'\xd0\x9d\xd0\xb8\xd1\x83\xd1\x8d \xd0\xbe. (NZ)'), (b'NZ', b'\xd0\x9d\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x8f \xd0\x97\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb8\xd1\x8f'), (b'NC', b'\xd0\x9d\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x8f \xd0\x9a\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbe. (FR)'), (b'NO', b'\xd0\x9d\xd0\xbe\xd1\x80\xd0\xb2\xd0\xb5\xd0\xb3\xd0\xb8\xd1\x8f'), (b'NF', b'\xd0\x9d\xd0\xbe\xd1\x80\xd1\x84\xd0\xbe\xd0\xbb\xd0\xba \xd0\xbe. (AU)'), (b'AE', b'\xd0\x9e\xd0\xb1\xd1\x8a\xd0\xb5\xd0\xb4\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\x90\xd1\x80\xd0\xb0\xd0\xb1\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xad\xd0\xbc\xd0\xb8\xd1\x80\xd0\xb0\xd1\x82\xd1\x8b'), (b'OM', b'\xd0\x9e\xd0\xbc\xd0\xb0\xd0\xbd'), (b'PK', b'\xd0\x9f\xd0\xb0\xd0\xba\xd0\xb8\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'PW', b'\xd0\x9f\xd0\xb0\xd0\xbb\xd0\xb0\xd1\x83 (US)'), (b'PS', b'\xd0\x9f\xd0\xb0\xd0\xbb\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x8f'), (b'PA', b'\xd0\x9f\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbc\xd0\xb0'), (b'PG', b'\xd0\x9f\xd0\xb0\xd0\xbf\xd1\x83\xd0\xb0-\xd0\x9d\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x8f \xd0\x93\xd0\xb2\xd0\xb8\xd0\xbd\xd0\xb5\xd1\x8f'), (b'PY', b'\xd0\x9f\xd0\xb0\xd1\x80\xd0\xb0\xd0\xb3\xd0\xb2\xd0\xb0\xd0\xb9'), (b'PE', b'\xd0\x9f\xd0\xb5\xd1\x80\xd1\x83'), (b'PN', b'\xd0\x9f\xd0\xb8\xd1\x82\xd0\xba\xd1\x8d\xd1\x80\xd0\xbd \xd0\xbe-\xd0\xb2\xd0\xb0 (GB)'), (b'PL', b'\xd0\x9f\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb0'), (b'PT', b'\xd0\x9f\xd0\xbe\xd1\x80\xd1\x82\xd1\x83\xd0\xb3\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x8f'), (b'PR', b'\xd0\x9f\xd1\x83\xd1\x8d\xd1\x80\xd1\x82\xd0\xbe-\xd0\xa0\xd0\xb8\xd0\xba\xd0\xbe (US)'), (b'RE', b'\xd0\xa0\xd0\xb5\xd1\x8e\xd0\xbd\xd1\x8c\xd0\xbe\xd0\xbd \xd0\xbe. (FR)'), (b'CX', b'\xd0\xa0\xd0\xbe\xd0\xb6\xd0\xb4\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\xbe. (AU)'), (b'RU', b'\xd0\xa0\xd0\xbe\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f'), (b'RW', b'\xd0\xa0\xd1\x83\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb0'), (b'RO', b'\xd0\xa0\xd1\x83\xd0\xbc\xd1\x8b\xd0\xbd\xd0\xb8\xd1\x8f'), (b'SV', b'\xd0\xa1\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd0\xb4\xd0\xbe\xd1\x80'), (b'WS', b'\xd0\xa1\xd0\xb0\xd0\xbc\xd0\xbe\xd0\xb0'), (b'SM', b'\xd0\xa1\xd0\xb0\xd0\xbd \xd0\x9c\xd0\xb0\xd1\x80\xd0\xb8\xd0\xbd\xd0\xbe'), (b'ST', b'\xd0\xa1\xd0\xb0\xd0\xbd-\xd0\xa2\xd0\xbe\xd0\xbc\xd0\xb5 \xd0\xb8 \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbd\xd1\x81\xd0\xb8\xd0\xbf\xd0\xb8'), (b'SX', b'\xd0\xa1\xd0\xb8\xd0\xbd\xd1\x82-\xd0\x9c\xd0\xb0\xd1\x80\xd1\x82\xd0\xb5\xd0\xbd'), (b'SA', b'\xd0\xa1\xd0\xb0\xd1\x83\xd0\xb4\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\x90\xd1\x80\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x8f'), (b'SZ', b'\xd0\xa1\xd0\xb2\xd0\xb0\xd0\xb7\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb4'), (b'SJ', b'\xd0\xa1\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb1\xd0\xb0\xd1\x80\xd0\xb4 \xd0\xb8 \xd0\xaf\xd0\xbd \xd0\x9c\xd0\xb5\xd0\xb9\xd0\xb5\xd0\xbd \xd0\xbe-\xd0\xb2\xd0\xb0 (NO)'), (b'SH', b'\xd0\xa1\xd0\xb2\xd1\x8f\xd1\x82\xd0\xbe\xd0\xb9 \xd0\x95\xd0\xbb\xd0\xb5\xd0\xbd\xd1\x8b \xd0\xbe. (GB)'), (b'KP', b'\xd0\xa1\xd0\xb5\xd0\xb2\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb0\xd1\x8f \xd0\x9a\xd0\xbe\xd1\x80\xd0\xb5\xd1\x8f (\xd0\x9a\xd0\x9d\xd0\x94\xd0\xa0)'), (b'MP', b'\xd0\xa1\xd0\xb5\xd0\xb2\xd0\xb5\xd1\x80\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\x9c\xd0\xb0\xd1\x80\xd0\xb8\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xbe-\xd0\xb2\xd0\xb0 (US)'), (b'SC', b'\xd0\xa1\xd0\xb5\xd0\xb9\xd1\x88\xd0\xb5\xd0\xbb\xd1\x8b'), (b'VC', b'\xd0\xa1\xd0\xb5\xd0\xbd-\xd0\x92\xd0\xb8\xd0\xbd\xd1\x81\xd0\xb5\xd0\xbd\xd1\x82 \xd0\xb8 \xd0\x93\xd1\x80\xd0\xb5\xd0\xbd\xd0\xb0\xd0\xb4\xd0\xb8\xd0\xbd\xd1\x8b'), (b'PM', b'\xd0\xa1\xd0\xb5\xd0\xbd-\xd0\x9f\xd1\x8c\xd0\xb5\xd1\x80 \xd0\xb8 \xd0\x9c\xd0\xb8\xd0\xba\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xbd (FR)'), (b'SN', b'\xd0\xa1\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb3\xd0\xb0\xd0\xbb'), (b'KN', b'\xd0\xa1\xd0\xb5\xd0\xbd\xd1\x82-\xd0\x9a\xd1\x80\xd0\xb8\xd1\x81\xd1\x82\xd0\xbe\xd1\x84\xd0\xb5\xd1\x80 \xd0\xb8 \xd0\x9d\xd0\xb5\xd0\xb2\xd0\xb8\xd1\x81'), (b'LC', b'\xd0\xa1\xd0\xb5\xd0\xbd\xd1\x82-\xd0\x9b\xd1\x8e\xd1\x81\xd0\xb8\xd1\x8f'), (b'RS', b'\xd0\xa1\xd0\xb5\xd1\x80\xd0\xb1\xd0\xb8\xd1\x8f'), (b'SG', b'\xd0\xa1\xd0\xb8\xd0\xbd\xd0\xb3\xd0\xb0\xd0\xbf\xd1\x83\xd1\x80'), (b'SY', b'\xd0\xa1\xd0\xb8\xd1\x80\xd0\xb8\xd1\x8f'), (b'SK', b'\xd0\xa1\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xba\xd0\xb8\xd1\x8f'), (b'SI', b'\xd0\xa1\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f'), (b'US', b'\xd0\xa1\xd0\xbe\xd0\xb5\xd0\xb4\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xa8\xd1\x82\xd0\xb0\xd1\x82\xd1\x8b \xd0\x90\xd0\xbc\xd0\xb5\xd1\x80\xd0\xb8\xd0\xba\xd0\xb8'), (b'SB', b'\xd0\xa1\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd0\xbe-\xd0\xb2\xd0\xb0'), (b'SO', b'\xd0\xa1\xd0\xbe\xd0\xbc\xd0\xb0\xd0\xbb\xd0\xb8'), (b'SD', b'\xd0\xa1\xd1\x83\xd0\xb4\xd0\xb0\xd0\xbd'), (b'SR', b'\xd0\xa1\xd1\x83\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb0\xd0\xbc'), (b'SL', b'\xd0\xa1\xd1\x8c\xd0\xb5\xd1\x80\xd1\x80\xd0\xb0-\xd0\x9b\xd0\xb5\xd0\xbe\xd0\xbd\xd0\xb5'), (b'TJ', b'\xd0\xa2\xd0\xb0\xd0\xb4\xd0\xb6\xd0\xb8\xd0\xba\xd0\xb8\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'TH', b'\xd0\xa2\xd0\xb0\xd0\xb8\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb4'), (b'TW', b'\xd0\xa2\xd0\xb0\xd0\xb9\xd0\xb2\xd0\xb0\xd0\xbd\xd1\x8c'), (b'TZ', b'\xd0\xa2\xd0\xb0\xd0\xbd\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f'), (b'TC', b'\xd0\xa2\xd0\xb5\xd1\x80\xd0\xba\xd1\x81 \xd0\xb8 \xd0\x9a\xd0\xb0\xd0\xb9\xd0\xba\xd0\xbe\xd1\x81 \xd0\xbe-\xd0\xb2\xd0\xb0 (GB)'), (b'TG', b'\xd0\xa2\xd0\xbe\xd0\xb3\xd0\xbe'), (b'TK', b'\xd0\xa2\xd0\xbe\xd0\xba\xd0\xb5\xd0\xbb\xd0\xb0\xd1\x83 \xd0\xbe-\xd0\xb2\xd0\xb0 (NZ)'), (b'TO', b'\xd0\xa2\xd0\xbe\xd0\xbd\xd0\xb3\xd0\xb0'), (b'TT', b'\xd0\xa2\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xb4\xd0\xb0\xd0\xb4 \xd0\xb8 \xd0\xa2\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb3\xd0\xbe'), (b'TV', b'\xd0\xa2\xd1\x83\xd0\xb2\xd0\xb0\xd0\xbb\xd1\x83'), (b'TN', b'\xd0\xa2\xd1\x83\xd0\xbd\xd0\xb8\xd1\x81'), (b'TM', b'\xd0\xa2\xd1\x83\xd1\x80\xd0\xba\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'TR', b'\xd0\xa2\xd1\x83\xd1\x80\xd1\x86\xd0\xb8\xd1\x8f'), (b'UG', b'\xd0\xa3\xd0\xb3\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb0'), (b'UZ', b'\xd0\xa3\xd0\xb7\xd0\xb1\xd0\xb5\xd0\xba\xd0\xb8\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd'), (b'UA', b'\xd0\xa3\xd0\xba\xd1\x80\xd0\xb0\xd0\xb8\xd0\xbd\xd0\xb0'), (b'WF', b'\xd0\xa3\xd0\xbe\xd0\xbb\xd0\xbb\xd0\xb8\xd1\x81 \xd0\xb8 \xd0\xa4\xd1\x83\xd1\x82\xd1\x83\xd0\xbd\xd0\xb0 \xd0\xbe-\xd0\xb2\xd0\xb0 (FR)'), (b'UY', b'\xd0\xa3\xd1\x80\xd1\x83\xd0\xb3\xd0\xb2\xd0\xb0\xd0\xb9'), (b'FO', b'\xd0\xa4\xd0\xb0\xd1\x80\xd0\xb5\xd1\x80\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xbe-\xd0\xb2\xd0\xb0 (DK)'), (b'FJ', b'\xd0\xa4\xd0\xb8\xd0\xb4\xd0\xb6\xd0\xb8'), (b'PH', b'\xd0\xa4\xd0\xb8\xd0\xbb\xd0\xb8\xd0\xbf\xd0\xbf\xd0\xb8\xd0\xbd\xd1\x8b'), (b'FI', b'\xd0\xa4\xd0\xb8\xd0\xbd\xd0\xbb\xd1\x8f\xd0\xbd\xd0\xb4\xd0\xb8\xd1\x8f'), (b'FK', b'\xd0\xa4\xd0\xbe\xd0\xbb\xd0\xba\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb4\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 (\xd0\x9c\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5) \xd0\xbe-\xd0\xb2\xd0\xb0 (GB/AR)'), (b'FR', b'\xd0\xa4\xd1\x80\xd0\xb0\xd0\xbd\xd1\x86\xd0\xb8\xd1\x8f'), (b'GF', b'\xd0\xa4\xd1\x80\xd0\xb0\xd0\xbd\xd1\x86\xd1\x83\xd0\xb7\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\x93\xd0\xb2\xd0\xb8\xd0\xb0\xd0\xbd\xd0\xb0 (FR)'), (b'PF', b'\xd0\xa4\xd1\x80\xd0\xb0\xd0\xbd\xd1\x86\xd1\x83\xd0\xb7\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\x9f\xd0\xbe\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb8\xd1\x8f'), (b'HM', b'\xd0\xa5\xd0\xb5\xd1\x80\xd0\xb4 \xd0\xb8 \xd0\x9c\xd0\xb0\xd0\xba\xd0\xb4\xd0\xbe\xd0\xbd\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xb4 \xd0\xbe-\xd0\xb2\xd0\xb0 (AU)'), (b'HR', b'\xd0\xa5\xd0\xbe\xd1\x80\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb8\xd1\x8f'), (b'CF', b'\xd0\xa6\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe-\xd0\xb0\xd1\x84\xd1\x80\xd0\xb8\xd0\xba\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xa0\xd0\xb5\xd1\x81\xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd0\xb0'), (b'TD', b'\xd0\xa7\xd0\xb0\xd0\xb4'), (b'ME', b'\xd0\xa7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd1\x80\xd0\xb8\xd1\x8f'), (b'CZ', b'\xd0\xa7\xd0\xb5\xd1\x85\xd0\xb8\xd1\x8f'), (b'CL', b'\xd0\xa7\xd0\xb8\xd0\xbb\xd0\xb8'), (b'CH', b'\xd0\xa8\xd0\xb2\xd0\xb5\xd0\xb9\xd1\x86\xd0\xb0\xd1\x80\xd0\xb8\xd1\x8f'), (b'SE', b'\xd0\xa8\xd0\xb2\xd0\xb5\xd1\x86\xd0\xb8\xd1\x8f'), (b'LK', b'\xd0\xa8\xd1\x80\xd0\xb8-\xd0\x9b\xd0\xb0\xd0\xbd\xd0\xba\xd0\xb0'), (b'EC', b'\xd0\xad\xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd0\xbe\xd1\x80'), (b'GQ', b'\xd0\xad\xd0\xba\xd0\xb2\xd0\xb0\xd1\x82\xd0\xbe\xd1\x80\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd0\x93\xd0\xb2\xd0\xb8\xd0\xbd\xd0\xb5\xd1\x8f'), (b'ER', b'\xd0\xad\xd1\x80\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f'), (b'EE', b'\xd0\xad\xd1\x81\xd1\x82\xd0\xbe\xd0\xbd\xd0\xb8\xd1\x8f'), (b'ET', b'\xd0\xad\xd1\x84\xd0\xb8\xd0\xbe\xd0\xbf\xd0\xb8\xd1\x8f'), (b'YU', b'\xd0\xae\xd0\xb3\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x8f'), (b'ZA', b'\xd0\xae\xd0\xb6\xd0\xbd\xd0\xb0\xd1\x8f \xd0\x90\xd1\x84\xd1\x80\xd0\xb8\xd0\xba\xd0\xb0'), (b'GS', b'\xd0\xae\xd0\xb6\xd0\xbd\xd0\xb0\xd1\x8f \xd0\x93\xd0\xb5\xd0\xbe\xd1\x80\xd0\xb3\xd0\xb8\xd1\x8f \xd0\xb8 \xd0\xae\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xa1\xd0\xb0\xd0\xbd\xd0\xb4\xd0\xb2\xd0\xb8\xd1\x87\xd0\xb5\xd0\xb2\xd1\x8b \xd0\xbe-\xd0\xb2\xd0\xb0'), (b'KR', b'\xd0\xae\xd0\xb6\xd0\xbd\xd0\xb0\xd1\x8f \xd0\x9a\xd0\xbe\xd1\x80\xd0\xb5\xd1\x8f (\xd0\xa0\xd0\xb5\xd1\x81\xd0\xbf\xd1\x83\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd0\xb0 \xd0\x9a\xd0\xbe\xd1\x80\xd0\xb5\xd1\x8f)'), (b'JM', b'\xd0\xaf\xd0\xbc\xd0\xb0\xd0\xb9\xd0\xba\xd0\xb0'), (b'JP', b'\xd0\xaf\xd0\xbf\xd0\xbe\xd0\xbd\xd0\xb8\xd1\x8f')], default=b'UA', max_length=2, verbose_name='\u0441\u0442\u0440\u0430\u043d\u0430')),
                ('addr_city', models.CharField(max_length=100, null=True, verbose_name='\u043d\u0430\u0441\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442')),
                ('addr_street', models.CharField(blank=True, max_length=255, null=True, verbose_name='\u0443\u043b\u0438\u0446\u0430')),
                ('addr_house', models.CharField(blank=True, max_length=10, null=True, verbose_name='\u043d\u043e\u043c\u0435\u0440 \u0434\u043e\u043c\u0430')),
                ('geo_source', models.CharField(choices=[(b'addr', '\u043f\u043e\u043b\u044f \u0430\u0434\u0440\u0435\u0441\u0430'), (b'coords', '\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b'), (b'addr_coords', '\u043f\u043e\u043b\u044f \u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b')], default=b'addr', max_length=15, verbose_name='\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f')),
                ('coords_x', models.FloatField(blank=True, null=True, verbose_name='\u0434\u043e\u043b\u0433\u043e\u0442\u0430/longitude')),
                ('coords_y', models.FloatField(blank=True, null=True, verbose_name='\u0448\u0438\u0440\u043e\u0442\u0430/latitude')),
                ('content_provider', models.PositiveIntegerField(blank=True, choices=[(1, b'Fornova'), (2, b'ListGlobally'), (3, b'WorldPosting')], db_index=True, null=True, verbose_name='\u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440')),
                ('is_published', models.BooleanField(default=False, verbose_name='\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e \u043d\u0430 \u0441\u0430\u0439\u0442\u0435')),
                ('status', models.PositiveIntegerField(choices=[(1, '\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e'), (210, '\u043d\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u043e'), (211, '\u0443\u0434\u0430\u043b\u0435\u043d\u043e')], default=210, verbose_name='\u0441\u0442\u0430\u0442\u0443\u0441')),
                ('moderation_status', models.PositiveIntegerField(blank=True, choices=[(10, '\u043d\u0435\u0442 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430'), (11, '\u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441'), (12, '\u043d\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0446\u0435\u043d\u0430'), (13, '\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438'), (14, '\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f\u0445'), (15, '\u0444\u043e\u0442\u043e \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0443 \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438'), (16, '\u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c'), (17, '\u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430'), (19, '\u0440\u0435\u043a\u043b\u0430\u043c\u0430'), (20, '\u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043e'), (22, '\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f'), (23, '\u043d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0416\u041a'), (24, '\u043e\u0431\u044a\u0435\u043a\u0442 \u0432\u0442\u043e\u0440\u0438\u0447\u043d\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430'), (21, '\u0440\u043e\u0431\u043e\u0442'), (200, '\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u043e (\u0431\u0430\u043d)'), (220, '\u0444\u0438\u0434\u044b \u0431\u0435\u0437 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a')], null=True, verbose_name='\u0441\u0442\u0430\u0442\u0443\u0441 \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u0438')),
                ('vip', models.BooleanField(default=False, verbose_name='VIP')),
                ('is_bargain_possible', models.BooleanField(default=False, verbose_name='\u0442\u043e\u0440\u0433 \u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d')),
                ('deal_type', models.CharField(choices=[(b'rent', '\u0430\u0440\u0435\u043d\u0434\u0430'), (b'rent_daily', '\u043f\u043e\u0441\u0443\u0442\u043e\u0447\u043d\u0430\u044f \u0430\u0440\u0435\u043d\u0434\u0430'), (b'sale', '\u043f\u0440\u043e\u0434\u0430\u0436\u0430')], default=b'rent', max_length=20, verbose_name='\u0442\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438')),
                ('property_type', models.CharField(choices=[(b'flat', '\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430'), (b'room', '\u043a\u043e\u043c\u043d\u0430\u0442\u0430'), (b'house', '\u0434\u043e\u043c'), (b'plot', '\u0443\u0447\u0430\u0441\u0442\u043e\u043a'), (b'commercial', '\u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u0430\u044f \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u044c'), (b'garages', '\u0433\u0430\u0440\u0430\u0436\u0438')], default=b'flat', max_length=20, verbose_name='\u0442\u0438\u043f \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438')),
                ('property_commercial_type', models.CharField(blank=True, choices=[(b'office', '\u043e\u0444\u0438\u0441'), (b'storage', '\u0441\u043a\u043b\u0430\u0434'), (b'non_residential', '\u043d\u0435\u0436\u0438\u043b\u044b\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f'), (b'manufacturing', '\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438'), (b'for_business', '\u043f\u043e\u0434 \u0431\u0438\u0437\u043d\u0435\u0441'), (b'ready_business', '\u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 \u0431\u0438\u0437\u043d\u0435\u0441')], max_length=20, null=True, verbose_name='\u0442\u0438\u043f \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438')),
                ('title', models.CharField(max_length=255, verbose_name='\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f')),
                ('price', models.BigIntegerField(default=0, verbose_name='\u0446\u0435\u043d\u0430')),
                ('currency', models.CharField(choices=[(b'UAH', '\u0433\u0440\u043d.'), (b'EUR', '\u20ac'), (b'USD', '$'), (b'RUR', '\u0440\u0443\u0431.')], default=b'UAH', max_length=3, verbose_name='\u0432\u0430\u043b\u044e\u0442\u0430 \u0446\u0435\u043d\u044b')),
                ('price_uah', models.BigIntegerField(default=0, verbose_name='\u0446\u0435\u043d\u0430 \u0432 \u0433\u0440\u0438\u0432\u043d\u0430\u0445')),
                ('building_type', models.PositiveSmallIntegerField(blank=True, choices=[(6, '\u0434\u043e\u0440\u0435\u0432\u043e\u043b\u044e\u0446\u0438\u043e\u043d\u043d\u043e\u0435'), (1, '\u0441\u0442\u0430\u043b\u0438\u043d\u043a\u0430'), (2, '\u0445\u0440\u0443\u0449\u0435\u0432\u043a\u0430'), (4, '\u0447\u0435\u0448\u043a\u0430'), (7, '\u0431\u0440\u0435\u0436\u043d\u0435\u0432\u043a\u0430'), (8, '\u0435\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0438\u043d\u043a\u0430'), (9, '\u043d\u0435\u043c\u043a\u0430'), (10, '\u0433\u043e\u0441\u0442\u0438\u043d\u043a\u0430'), (11, '\u043c\u0430\u043b\u043e\u0441\u0435\u043c\u0435\u0439\u043a\u0430'), (14, '\u043f\u0430\u043d\u0435\u043b\u044c\u043d\u044b\u0439'), (5, '\u043d\u043e\u0432\u043e\u0441\u0442\u0440\u043e\u0439'), (12, '\u044d\u043b\u0438\u0442\u043d\u044b\u0439 \u043d\u043e\u0432\u043e\u0441\u0442\u0440\u043e\u0439'), (13, '\u0432\u044b\u0441\u043e\u0442\u043a\u0430'), (200, '\u0434\u0440\u0443\u0433\u043e\u0435:')], null=True, verbose_name='\u0442\u0438\u043f \u0437\u0434\u0430\u043d\u0438\u044f')),
                ('building_type_other', models.CharField(blank=True, help_text='\u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u0442\u0438\u043f \u0437\u0434\u0430\u043d\u0438\u044f', max_length=50, null=True, verbose_name='\u0442\u0438\u043f \u0437\u0434\u0430\u043d\u0438\u044f (\u0434\u0440\u0443\u0433\u043e\u0435)')),
                ('building_layout', models.PositiveSmallIntegerField(blank=True, choices=[(1, '\u0440\u0430\u0437\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043c\u043d\u0430\u0442\u044b'), (2, '\u043f\u0440\u043e\u0445\u043e\u0434\u043d\u044b\u0435 \u043a\u043e\u043c\u043d\u0430\u0442\u044b'), (3, '\u0441\u0442\u0443\u0434\u0438\u044f'), (4, '\u0441\u0432\u043e\u0431\u043e\u0434\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u043a\u0430')], null=True, verbose_name='\u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u043a\u0430')),
                ('building_walls', models.PositiveSmallIntegerField(blank=True, choices=[(1, '\u043a\u0438\u0440\u043f\u0438\u0447\u043d\u044b\u0439'), (2, '\u043f\u0430\u043d\u0435\u043b\u044c\u043d\u044b\u0439'), (3, '\u043c\u043e\u043d\u043e\u043b\u0438\u0442\u043d\u044b\u0439'), (4, '\u0431\u043b\u043e\u0447\u043d\u044b\u0439'), (5, '\u0434\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u044b\u0439')], null=True, verbose_name='\u0442\u0438\u043f \u0441\u0442\u0435\u043d')),
                ('building_windows', models.PositiveSmallIntegerField(blank=True, choices=[(1, '\u043f\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u0432\u044b\u0435'), (2, '\u0434\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u044b\u0435')], null=True, verbose_name='\u0442\u0438\u043f \u043e\u043a\u043e\u043d')),
                ('building_heating', models.PositiveSmallIntegerField(blank=True, choices=[(1, '\u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u0435'), (2, '\u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e\u0435')], null=True, verbose_name='\u0442\u0438\u043f \u043e\u0442\u043e\u043f\u043b\u0435\u043d\u0438\u044f')),
                ('rooms', models.PositiveIntegerField(blank=True, null=True, verbose_name='\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442')),
                ('guests_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b-\u0432\u043e \u0433\u043e\u0441\u0442\u0435\u0439')),
                ('area', models.DecimalField(blank=True, decimal_places=2, help_text='\u043e\u0431\u0449\u0430\u044f', max_digits=8, null=True, verbose_name='\u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043e\u0431\u0449\u0430\u044f')),
                ('area_living', models.DecimalField(blank=True, decimal_places=2, help_text='\u0436\u0438\u043b\u0430\u044f', max_digits=6, null=True, verbose_name='\u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0436\u0438\u043b\u0430\u044f')),
                ('area_kitchen', models.DecimalField(blank=True, decimal_places=2, help_text='\u043a\u0443\u0445\u043d\u044f', max_digits=6, null=True, verbose_name='\u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u0443\u0445\u043d\u0438')),
                ('description', models.TextField(blank=True, help_text='\u0417\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0442\u044c \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0434\u0440\u0443\u0433\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u043e', null=True, verbose_name='\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435')),
                ('floor', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49)], null=True, verbose_name='\u044d\u0442\u0430\u0436')),
                ('floors_total', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49)], null=True, verbose_name='\u044d\u0442\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u043c\u0430')),
                ('price_period', models.CharField(blank=True, max_length=20, null=True, verbose_name='\u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u043b\u0430\u0442\u044b')),
                ('space_units', models.CharField(blank=True, max_length=20, null=True, verbose_name='\u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b')),
                ('source_url', models.CharField(blank=True, max_length=512, verbose_name='\u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a')),
                ('created', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='\u0432\u0440\u0435\u043c\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f')),
                ('updated', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='\u0432\u0440\u0435\u043c\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f')),
                ('expired', models.DateTimeField(blank=True, null=True, verbose_name='\u0438\u0441\u0442\u0435\u043a\u0430\u0435\u0442')),
                ('fields_for_moderation', models.CharField(blank=True, max_length=100, null=True, verbose_name='\u043f\u043e\u043b\u044f, \u0442\u0440\u0435\u0431\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043c\u043e\u0434\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c')),
                ('modified_calendar', models.DateTimeField(null=True, verbose_name='\u0432\u0440\u0435\u043c\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f')),
                ('xml_id', models.CharField(max_length=50, null=True, verbose_name='\u0438\u043d\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0432 XML')),
                ('international_catalog', models.PositiveSmallIntegerField(blank=True, choices=[(1, '\u0442\u043e\u043b\u044c\u043a\u043e mesto.ua'), (2, 'mesto.ua \u0438 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0435 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0438')], null=True, verbose_name='\u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0437\u0430\u0440\u0443\u0431\u0435\u0436\u043d\u043e\u0439 \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446/\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u043e\u0435 \u043b\u0438\u0446\u043e (\u0434\u043b\u044f \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432)')),
                ('has_photos', models.BooleanField(default=False, verbose_name='\u0423 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0444\u043e\u0442\u043e?')),
                ('facilities_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None, verbose_name='\u0434\u0435\u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430')),
                ('without_commission', models.BooleanField(default=False, verbose_name='\u0411\u0435\u0437 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438')),
            ],
            options={
                'ordering': ['-pk'],
                'verbose_name': '\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435',
                'verbose_name_plural': '\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u0438',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, 'ad.basead', models.Model),
        ),
        migrations.AddField(
            model_name='viewscount',
            name='basead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewscounts', to='ad.BaseAd', verbose_name='\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435'),
        ),
        migrations.AddField(
            model_name='reserveddate',
            name='basead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserved', to='ad.BaseAd'),
        ),
        migrations.AddField(
            model_name='photo',
            name='basead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos', to='ad.BaseAd', verbose_name='\u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u044c'),
        ),
        migrations.AddField(
            model_name='phoneinad',
            name='basead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones_in_ad', to='ad.BaseAd', verbose_name='\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435'),
        ),
        migrations.AddField(
            model_name='phoneinad',
            name='phone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones_in_ad', to='ad.Phone', verbose_name='\u0442\u0435\u043b\u0435\u0444\u043e\u043d'),
        ),
        migrations.AddField(
            model_name='moderation',
            name='basead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='ad.BaseAd', verbose_name='\u043d\u0435\u0434\u0432\u0438\u0436\u0438\u043c\u043e\u0441\u0442\u044c'),
        ),
    ]
